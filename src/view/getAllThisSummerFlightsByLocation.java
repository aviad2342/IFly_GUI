/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import core.Flight;

import java.awt.Dimension;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import utils.E_Airports;
import utils.TableColumnAdjuster;

/**
 *
 * @author Aviad
 */
@SuppressWarnings("serial")
public class getAllThisSummerFlightsByLocation extends javax.swing.JInternalFrame {
    //***************************************** Variables *********************************************
    /**view field*/
    private ViewLogic view;
    /**MyDesktopPane field*/
    private MyDesktopPane myDesk;
    //**************************************** Constructor ********************************************
    /**
     * Creates new form getAllThisSummerFlightsByLocation
     * @param view
     * @param myDesk
     */
    public getAllThisSummerFlightsByLocation(ViewLogic view, MyDesktopPane myDesk) {
        this.view = view;
        this.myDesk = myDesk;
        setTitle("Summer Flights By Location"); //the title of the frame
        Dimension desktopSize = myDesk.getSize();   // the size of the desktopPane
        initComponents();
        setLocation(((desktopSize.width-this.getSize().width) / 2) , ((desktopSize.height-this.getSize().height) / 2));    // centering the frame on screen
    }


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabFlights = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbAirport = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plane-icon-blue.png"))); // NOI18N

        tabFlights.setBackground(new java.awt.Color(102, 102, 102));
        tabFlights.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Number", "Departure Data And Time", "Arrival Date And Time", "Flight Cost", "Number Of Seats", "Source", "Destination", "Stops"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabFlights.setToolTipText("Press to watch flight details");
        tabFlights.setColumnSelectionAllowed(true);
        tabFlights.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabFlightsMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabFlights);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Choose Airport:");

        cbAirport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbAirport.setModel(new DefaultComboBoxModel(utils.E_Airports.values()));
        cbAirport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAirportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1075, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(31, 31, 31)
                        .addComponent(cbAirport, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbAirport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAirportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAirportActionPerformed
       E_Airports departureAirport = (E_Airports)cbAirport.getSelectedItem();
       if(!view.getAllThisSummerFlightsByLocation(departureAirport).isEmpty()){
           DefaultTableModel modle = new DefaultTableModel(new String[]{"Flight Number", "Departure Data And Time", "Arrival Date And Time", "Cost", "Number Of Seats","Source", "Destination" , "Stops"},0);
           tabFlights.setModel(modle);
           tabFlights.setShowGrid(true);
           tabFlights.setColumnSelectionAllowed(true);
        view.sound("/sounds/okSound.wav");    
        for(Flight f : view.getAllThisSummerFlightsByLocation(departureAirport)){ 
           modle.addRow(new Object[]{f.getFlightNumber(), f.getFlightDateAndTimeSource(), f.getFlightDateAndTimeDestination(), f.getFlightCost(), f.getAirplane().getTotalNumberSeats(),
                 f.getSource(), f.getDestination(), f.getStops()});               
        }
        TableColumnAdjuster tca = new TableColumnAdjuster(tabFlights);
        tca.adjustColumns(); 
       }  else {
            view.sound("/sounds/errorSound.wav"); 
            int response = JOptionPane.showConfirmDialog(null, "Sorry no flights for "+ departureAirport +" airport\nwould you like to pick a different airport?", "Add Error", JOptionPane.YES_NO_OPTION);        
            if (response == JOptionPane.YES_OPTION) {
                 cbAirport.setSelectedIndex(0);     
                } else {
                   dispose();
                }
        }
    }//GEN-LAST:event_cbAirportActionPerformed

    private void tabFlightsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabFlightsMousePressed
        try{
            Flight flight = view.getFlights().get(Integer.parseInt(tabFlights.getModel().getValueAt(tabFlights.getSelectedRow(), 0).toString()));
            ShowChoice ev = new ShowChoice(null, closable, this.myDesk ,flight);
            ev.setVisible(true);
            
        }catch (Exception e){
            view.sound("/sounds/errorSound.wav");
            JOptionPane.showMessageDialog(null, "Sorry this flight details are not available!", "Added Message", JOptionPane.PLAIN_MESSAGE, view.icon("/images/symbolError.png"));
        }
    }//GEN-LAST:event_tabFlightsMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox cbAirport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabFlights;
    // End of variables declaration//GEN-END:variables
}
